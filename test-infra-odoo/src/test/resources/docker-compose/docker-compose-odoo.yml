services:

  # Odoo
  odoo:
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      - HOST=postgresql
      - USER=odoo
      - PASSWORD=password
      - ADDONS=sale_management,stock,account_account,purchase,mrp,odoo_initializer,ozone_settings,mrp_product_expiry,product_expiry,l10n_generic_coa
      - INITIALIZER_DATA_FILES_PATH=/mnt/odoo_config
      - INITIALIZER_CONFIG_FILE_PATH=/mnt/odoo_config/initializer_config.json
    image: mekomsolutions/odoo
    ports:
      - '8069:8069'
    restart: unless-stopped
    volumes:
      - "odoo-filestore:/var/lib/odoo/filestore"
      - "../distro/binaries/odoo/addons:/mnt/extra-addons"
      - "../distro/configs/odoo/initializer_config/:/mnt/odoo_config"
      - "../distro/configs/odoo/config/odoo.conf:/etc/properties/odoo.conf"
      - "odoo-checksums:/mnt/checksums"

  postgresql:
    command: "postgres -c wal_level=logical -c max_wal_senders=10 -c max_replication_slots=10"
    image: postgres:13
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      ODOO_DB_NAME: odoo
      ODOO_DB_USER: odoo
      ODOO_DB_PASSWORD: password
    volumes:
      - "postgresql-data:/var/lib/postgresql/data"
      - "../distro/data/postgresql/create_db.sh:/docker-entrypoint-initdb.d/create_db.sh"
      - "../distro/data/postgresql/odoo:/docker-entrypoint-initdb.d/db/odoo"

  openmrs:
    depends_on:
      mysql:
        condition: service_started
#      env-substitution:
#        condition: service_completed_successfully
    ports:
      - '80:8080'
    environment:
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
      OMRS_CONFIG_CREATE_TABLES: "true"
      OMRS_CONFIG_CONNECTION_SERVER: mysql
      OMRS_CONFIG_CONNECTION_DATABASE: openmrs
      OMRS_CONFIG_CONNECTION_USERNAME: openmrs
      OMRS_CONFIG_CONNECTION_PASSWORD: password
      HOST_URL: http://localhost
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/openmrs/health/started" ]
      interval: 10s
      timeout: 5s
      retries: 48
      start_period: 120s
    image: openmrs/openmrs-reference-application-3-backend:nightly
    restart: unless-stopped
    volumes:
      - "openmrs-data:/openmrs/data"
      - "openmrs-owas:/openmrs/distribution/openmrs_owas/"
      - "openmrs-core:/openmrs/distribution/openmrs_core/"
      - "../distro/binaries/openmrs/modules:/openmrs/distribution/openmrs_modules/"
      - "openmrs-config:/openmrs/distribution/openmrs_config/"
      - "openmrs-config-checksums:/openmrs/data/configuration_checksums"
      - "../distro/properties/:/etc/properties/"

  mysql:
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed
      - --log-bin=mysqld-bin
      - --binlog-format=ROW
      - --server-id=2
      - --sync-binlog=1
      - --binlog-annotate-row-events=0
    healthcheck:
      test: "exit 0"
    image: mariadb:10.8
    ports:
      - "3306:3306"
    restart: unless-stopped
    environment:
      OPENMRS_DB_NAME: openmrs
      OPENMRS_DB_USER: openmrs
      OPENMRS_DB_PASSWORD: password
      MYSQL_ROOT_PASSWORD: 3cY8Kve4lGey
    volumes:
      - "../distro/data/mysql/openmrs:/docker-entrypoint-initdb.d/db/openmrs"
      - "mysql-data:/var/lib/mysql"
      - "../distro/data/mysql/create_db.sh:/docker-entrypoint-initdb.d/create_db.sh"

#  env-substitution:
#    image: mekomsolutions/env-substitution:1e6fa02
#    environment:
#      - SENAITE_PUBLIC_URL=http://localhost:8081
#    restart: on-failure
#    volumes:
#      - "../distro:/opt/env-substitution/files"

volumes:
  postgresql-data: ~
  odoo-checksums: ~
  odoo-filestore: ~
  odoo-web-data: ~
  openmrs-core: ~
  openmrs-config: ~
  openmrs-config-checksums: ~
  openmrs-data: ~
  openmrs-modules: ~
  openmrs-owas: ~
  mysql-data: ~
